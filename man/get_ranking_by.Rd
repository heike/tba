% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_ranking_by.R
\name{get_ranking_by}
\alias{get_ranking_by}
\title{Rank teams in the qualifying matches of an event by a scoring variable}
\usage{
get_ranking_by(data, variable, method = "normal")
}
\arguments{
\item{data}{tibble of match information - it is assumed that each line corresponds
to the score breakdown of one team in one event's match.}

\item{variable}{numeric measurement.}

\item{method}{character which model should be calculated? Either \code{normal} or \code{loglinear}.}
}
\value{
tibble of the ranked teams and the number of matches (\code{n}) that the ranking is based on.
}
\description{
All teams are ranked (if possible) by their contribution to the scoring variable.
}
\details{
In order to model each team's contribution, a wide data set has to be constructed, with each
team as a variable, and each row as one of the alliances in one match and their score.
An alliance in a match consists of exactly three robots. This requirement is checked before modelling
and if not fulfilled, results in a warning.
A normal model is then fitted, or, if \code{method = "loglinear"} a log-linear model is fitted, if all values in the scoring variable are non-negative.
The coefficients of this model can be interpreted as the average (log) contribution of that
team to the score of a match. The OPR (offensive power rating) corresponds
to a call to \code{get_ranking_by} with \code{score} as the variable.
}
\examples{
# example code
# get all matches for one event:
clash_matches <- get_records("event/2024cttd/matches")
# get the score breakdown for each of the teams in each match
clash_details <- get_match_details(clash_matches)

library(dplyr, quietly=TRUE)
# now get the contribution to the score:
clash_details \%>\% filter(comp_level == "qm") \%>\% # get the qualifying matches
  get_ranking_by(score)
# These coefficients correspond to the OPR 

# team contribution to the score without counting the opponents' fouls:
clash_details \%>\% filter(comp_level == "qm") \%>\% # get the qualifying matches
  get_ranking_by(score-foulPoints)
}
